// <auto-generated />
using System;
using DBMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DBMS.Migrations
{
    [DbContext(typeof(DMSContext))]
    [Migration("20201031045618_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DBMS.Data.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Line1")
                        .HasColumnType("int");

                    b.Property<string>("Line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surburb")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("DBMS.Data.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.HasIndex("AddressId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("DBMS.Data.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProgrammeID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProgrammeID");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("DBMS.Data.Representative", b =>
                {
                    b.Property<int>("RepresentativeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepresentativeID");

                    b.ToTable("Representative");
                });

            modelBuilder.Entity("GradeBookConsoleApp.Data.Beneficiary", b =>
                {
                    b.Property<int>("BeneficiaryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("AlternativeNumber")
                        .HasColumnType("int");

                    b.Property<string>("CountryOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LiveinTownShip")
                        .HasColumnType("bit");

                    b.Property<int>("MobileNumber")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgrammeID")
                        .HasColumnType("int");

                    b.Property<string>("Race")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Said")
                        .HasColumnType("int");

                    b.Property<int?>("StartUpID")
                        .HasColumnType("int");

                    b.Property<string>("Tertiary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalWorkExperiance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("highestEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("highestQaulification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imigration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passport")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BeneficiaryID");

                    b.HasIndex("AddressId");

                    b.HasIndex("ProgrammeID");

                    b.HasIndex("StartUpID");

                    b.ToTable("Beneficiary");
                });

            modelBuilder.Entity("GradeBookConsoleApp.Data.Faculty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraddingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyId");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("GradeBookConsoleApp.Data.Incubator", b =>
                {
                    b.Property<int>("IncubatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FacultyID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<int>("RepresentativeId")
                        .HasColumnType("int");

                    b.HasKey("IncubatorId");

                    b.HasIndex("FacultyID");

                    b.HasIndex("RepresentativeId");

                    b.ToTable("Incubator");
                });

            modelBuilder.Entity("GradeBookConsoleApp.Data.Programme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncubatorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfProgrammApplicants")
                        .HasColumnType("int");

                    b.Property<string>("PartnerShipAgreeing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgrammeFunder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IncubatorId");

                    b.ToTable("Programme");
                });

            modelBuilder.Entity("GradeBookConsoleApp.Data.StartUp", b =>
                {
                    b.Property<int>("StartUpID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlternativeNumber")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MobileNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgrammeID")
                        .HasColumnType("int");

                    b.Property<int?>("RepresentativeID")
                        .HasColumnType("int");

                    b.Property<string>("officeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StartUpID");

                    b.HasIndex("ProgrammeID");

                    b.HasIndex("RepresentativeID");

                    b.ToTable("StartUp");
                });

            modelBuilder.Entity("DBMS.Data.Company", b =>
                {
                    b.HasOne("DBMS.Data.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("DBMS.Data.Report", b =>
                {
                    b.HasOne("GradeBookConsoleApp.Data.Programme", null)
                        .WithMany("Reports")
                        .HasForeignKey("ProgrammeID");
                });

            modelBuilder.Entity("GradeBookConsoleApp.Data.Beneficiary", b =>
                {
                    b.HasOne("DBMS.Data.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("GradeBookConsoleApp.Data.Programme", null)
                        .WithMany("Beneficiaries")
                        .HasForeignKey("ProgrammeID");

                    b.HasOne("GradeBookConsoleApp.Data.StartUp", null)
                        .WithMany("Beneficiaries")
                        .HasForeignKey("StartUpID");
                });

            modelBuilder.Entity("GradeBookConsoleApp.Data.Faculty", b =>
                {
                    b.HasOne("DBMS.Data.Company", null)
                        .WithMany("Faculties")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("GradeBookConsoleApp.Data.Incubator", b =>
                {
                    b.HasOne("GradeBookConsoleApp.Data.Faculty", null)
                        .WithMany("Incubators")
                        .HasForeignKey("FacultyID");

                    b.HasOne("DBMS.Data.Representative", "Representative")
                        .WithMany()
                        .HasForeignKey("RepresentativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GradeBookConsoleApp.Data.Programme", b =>
                {
                    b.HasOne("GradeBookConsoleApp.Data.Incubator", null)
                        .WithMany("Programmes")
                        .HasForeignKey("IncubatorId");
                });

            modelBuilder.Entity("GradeBookConsoleApp.Data.StartUp", b =>
                {
                    b.HasOne("GradeBookConsoleApp.Data.Programme", null)
                        .WithMany("StartUps")
                        .HasForeignKey("ProgrammeID");

                    b.HasOne("DBMS.Data.Representative", "rep")
                        .WithMany()
                        .HasForeignKey("RepresentativeID");
                });
#pragma warning restore 612, 618
        }
    }
}
